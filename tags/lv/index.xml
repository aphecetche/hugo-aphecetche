<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lv on Laurent Aphecetche - High Energy Collisions Investigator</title>
    <link>http://aphecetche.github.io/tags/lv/</link>
    <description>Recent content in Lv on Laurent Aphecetche - High Energy Collisions Investigator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Laurent Aphecetche</copyright>
    <lastBuildDate>Sun, 20 Mar 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://aphecetche.github.io/tags/lv/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Adding LV values to the reconstruction</title>
      <link>http://aphecetche.github.io/2016/03/20/adding-lv-values-to-reco/</link>
      <pubDate>Sun, 20 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://aphecetche.github.io/2016/03/20/adding-lv-values-to-reco/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://alice.its.cern.ch/jira/browse/ALIROOT-6590&#34;&gt;JIRA&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;mapping:64dae948e49f4922a701c36690f4e4c1&#34;&gt;Mapping&lt;/h2&gt;

&lt;p&gt;The LV DCS mapping was not foreseen in the MCH mapping, so this is something that has to be added now.&lt;/p&gt;

&lt;p&gt;LV channels belong to groups. Each group has 3 voltages : -2.5, 2.5 and 3.3 Volts. Note that the DCS values themselves are always positive (i.e 2.5 , 2.5, 3.3 Volts for the 3 groups).&lt;/p&gt;

&lt;p&gt;The DCS aliases do have the form :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// St 1-2 have 4 LV groups

MchHvLvLeft/Chamber[01..10]Left/Group[1..4]dig
MchHvLvLeft/Chamber[01..10]Left/Group[1..4]ann
MchHvLvLeft/Chamber[01..10]Left/Group[1..4]anp
MchHvLvRight/Chamber[01..10]Right/Group[1..4]dig
MchHvLvRight/Chamber[01..10]Right/Group[1..4]ann
MchHvLvRight/Chamber[01..10]Right/Group[1..4]anp

// St3 has 5 LV groups

MchHvLvLeft/Chamber[05..06]Left/Group[5..5]dig
MchHvLvLeft/Chamber[05..06]Left/Group[5..5]ann
MchHvLvLeft/Chamber[05..06]Left/Group[5..5]anp
MchHvLvRight/Chamber[05..06]Right/Group[5..5]dig
MchHvLvRight/Chamber[05..06]Right/Group[5..5]ann
MchHvLvRight/Chamber[05..06]Right/Group[5..5]anp

// St4-5 have 7 LV groups

MchHvLvLeft/Chamber[07..10]Left/Group[5..7]dig
MchHvLvLeft/Chamber[07..10]Left/Group[5..7]ann
MchHvLvLeft/Chamber[07..10]Left/Group[5..7]anp
MchHvLvRight/Chamber[07..10]Right/Group[5..7]dig
MchHvLvRight/Chamber[07..10]Right/Group[5..7]ann
MchHvLvRight/Chamber[07..10]Right/Group[5..7]anp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;where &lt;code&gt;ann&lt;/code&gt; stands for analog negative (-2.5 V), &lt;code&gt;anp&lt;/code&gt; for analog positive (2.5 V) and &lt;code&gt;dig&lt;/code&gt; for digital (3.3 V).&lt;/p&gt;

&lt;p&gt;So we get a gran total of 324 ( = 3*108=3x(2x(4x4+2x5+4x7)) ) DCS LV aliases.&lt;/p&gt;

&lt;h2 id=&#34;ocdb:64dae948e49f4922a701c36690f4e4c1&#34;&gt;OCDB&lt;/h2&gt;

&lt;p&gt;First, while waiting to get values from Pt2 (see &lt;a href=&#34;https://alice.its.cern.ch/jira/browse/ALIDCS-540&#34;&gt;https://alice.its.cern.ch/jira/browse/ALIDCS-540&lt;/a&gt;) generate fake values
 using &lt;code&gt;AliMUONCDB&lt;/code&gt;, picking as reference run 246980 (LHC15o)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;AliMpCDB::LoadAll2();
time_t refTime = 1449969676;
AliCDBManager::Instance()-&amp;gt;SetDefaultStorage(&amp;quot;alien://folder=/alice/cern.ch/user/l/laphecet/OCDB&amp;quot;);
Bool_t defaultValue = kFALSE;
AliMUONCDB::WriteLV(defaultValue,246980,246980,refTime);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, use the new &lt;code&gt;AliMUONTrackerLV&lt;/code&gt; class (coming from the refactoring of &lt;code&gt;AliMUONTrackerHV&lt;/code&gt;, adding the &lt;code&gt;AliMUONTrackerVoltages&lt;/code&gt; base class) to check the fake values are as expected :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;AliMpCDB::LoadAll2();
AliMUONTrackerLV lv(246980,&amp;quot;alien://folder=/alice/cern.ch/user/l/laphecet/OCDB&amp;quot;);
AliCDBManager::Instance()-&amp;gt;SetSpecificStorage(&amp;quot;GRP/GRP/Data&amp;quot;,&amp;quot;local:///cvmfs/alice-ocdb.cern.ch/calibration/data/2015/OCDB&amp;quot;);
lv.Print(&amp;quot;Chamber01&amp;quot;);
lv.Plot(&amp;quot;Chamber01&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Should printout values around 2.5 for the &lt;code&gt;ann&lt;/code&gt; groups or &lt;code&gt;anp&lt;/code&gt; groups and around 3.3 for the &lt;code&gt;dig&lt;/code&gt; groups. Note that positive and negative groups both get positive values as that&amp;rsquo;s the way it&amp;rsquo;s done in DCS.&lt;/p&gt;

&lt;p&gt;Setting a specific storage for GRP to point to a real OCDB (compared to the local one $ALICE_ROOT/OCDB) to get the run start and end time.&lt;/p&gt;

&lt;p&gt;Next step is to use &lt;code&gt;mchview&lt;/code&gt; to get the ultimate graphical view on those values&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>